# POSIX shell environment configuration.

# Load shell functions.
# Unable to statically follow since path is dynamic.
# shellcheck source=SCRIPTDIR/.functions
. "${HOME}"/.config/sh/.functions

# Set XDG Base Directory Specification directories.
# Specification: https://specifications.freedesktop.org/basedir-spec/latest/
export XDG_DATA_HOME="${HOME}"/.local/share
export XDG_CONFIG_HOME="${HOME}"/.config
export XDG_STATE_HOME="${HOME}"/.local/state

export XDG_DATA_DIRS=/usr/local/share/:/usr/share/
export XDG_CONFIG_DIRS=/etc/xdg
export XDG_CACHE_HOME="${HOME}"/.cache
export XDG_RUNTIME_DIR="${TMPDIR%//run/user/"$(id -u)"}"
if [ ! -d "${XDG_RUNTIME_DIR}" ]; then
  mkdir -p "${XDG_RUNTIME_DIR}"
  chmod 0700 "${XDG_RUNTIME_DIR}"
fi

# Set history and temporary files.
export LESSHISTFILE="${XDG_STATE_HOME}"/less/history
export PYTHON_HISTORY="${XDG_STATE_HOME}"/python/python_history
export NODE_REPL_HISTORY="${XDG_DATA_HOME}"/node_repl_history

# Set language-specific configuration.
export BUNDLE_USER_CONFIG="${XDG_CONFIG_HOME}"/bundle
export BUNDLE_USER_CACHE="${XDG_CACHE_HOME}"/bundle
export BUNDLE_USER_PLUGIN="${XDG_DATA_HOME}"/bundle
export CARGO_HOME="${XDG_DATA_HOME}"/cargo
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}"/npm/npmrc
export NODENV_ROOT="${XDG_DATA_HOME}"/nodenv

# Set application-specific configuration.
export ANSIBLE_HOME="${XDG_DATA_HOME}"/ansible
export DOCKER_CONFIG="${XDG_CONFIG_HOME}"/docker
export GNUPGHOME="${XDG_DATA_HOME}"/gnupg

# Add system local binaries to search path.
path_prepend /usr/local/sbin /usr/local/bin

# Add required paths for non-interactive shells.
! is_shell_interactive && {
  # For Apple Silicon hosts with Homebrew installed, add it to search path.
  is_apple_silicon && path_prepend /opt/homebrew/sbin /opt/homebrew/bin
  # Add user local binary path to search paths for *non-login shell* use.
  path_prepend "${HOME}"/.local/bin
}

# Vim support for XDG directories for versions older than patch-9.1.0327.
if is_shell_interactive && command -v vi >/dev/null 2>&1; then
  unpatched=$(vi --clean -es \
    +'redir! > /dev/stdout' \
    +'silent echo has("patch-9.1.0327")' \
    +'redir END' +q | tail -n 1)
  [ "${unpatched}" = 0 ] && export VIMINIT="source ${XDG_CONFIG_HOME}/vim/vimrc"
  unset unpatched
fi
